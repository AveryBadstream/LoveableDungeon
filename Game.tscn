[gd_scene load_steps=24 format=2]

[ext_resource path="res://actors/Kestrel.tscn" type="PackedScene" id=1]
[ext_resource path="res://art/black_tile.tres" type="TileSet" id=2]
[ext_resource path="res://Game.gd" type="Script" id=3]
[ext_resource path="res://art/loveable_rogue.png" type="Texture" id=4]
[ext_resource path="res://RectHighlight.gd" type="Script" id=5]
[ext_resource path="res://DebugGui.gd" type="Script" id=6]
[ext_resource path="res://NodeTree.gd" type="Script" id=7]
[ext_resource path="res://RectrRoomHighlighter.gd" type="Script" id=8]
[ext_resource path="res://Hider.gd" type="Script" id=9]
[ext_resource path="res://GameWorld.gd" type="Script" id=10]
[ext_resource path="res://art/ice_tile.png" type="Texture" id=12]
[ext_resource path="res://map/LoveableBasic.gd" type="Script" id=13]
[ext_resource path="res://art/loveable-extended.png" type="Texture" id=14]
[ext_resource path="res://art/slap.wav" type="AudioStream" id=15]
[ext_resource path="res://art/FF_punch.wav" type="AudioStream" id=16]
[ext_resource path="res://art/blunk.wav" type="AudioStream" id=17]
[ext_resource path="res://art/hit2.wav" type="AudioStream" id=18]
[ext_resource path="res://FXManager.gd" type="Script" id=19]
[ext_resource path="res://GameUI.gd" type="Script" id=20]

[sub_resource type="GDScript" id=1]
script/source = "
"

[sub_resource type="TileSet" id=2]
0/name = "loveable-extended.png 0"
0/texture = ExtResource( 14 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 16, 192, 64 )
0/tile_mode = 1
0/autotile/bitmask_mode = 1
0/autotile/bitmask_flags = [ Vector2( 0, 0 ), 144, Vector2( 0, 1 ), 146, Vector2( 0, 2 ), 18, Vector2( 0, 3 ), 16, Vector2( 1, 0 ), 176, Vector2( 1, 1 ), 178, Vector2( 1, 2 ), 50, Vector2( 1, 3 ), 48, Vector2( 2, 0 ), 184, Vector2( 2, 1 ), 186, Vector2( 2, 2 ), 58, Vector2( 2, 3 ), 56, Vector2( 3, 0 ), 152, Vector2( 3, 1 ), 154, Vector2( 3, 2 ), 26, Vector2( 3, 3 ), 24, Vector2( 4, 0 ), 187, Vector2( 4, 1 ), 434, Vector2( 4, 2 ), 182, Vector2( 4, 3 ), 250, Vector2( 5, 0 ), 440, Vector2( 5, 1 ), 510, Vector2( 5, 2 ), 447, Vector2( 5, 3 ), 62, Vector2( 6, 0 ), 248, Vector2( 6, 1 ), 507, Vector2( 6, 2 ), 255, Vector2( 6, 3 ), 59, Vector2( 7, 0 ), 190, Vector2( 7, 1 ), 218, Vector2( 7, 2 ), 155, Vector2( 7, 3 ), 442, Vector2( 8, 0 ), 432, Vector2( 8, 1 ), 438, Vector2( 8, 2 ), 446, Vector2( 8, 3 ), 54, Vector2( 9, 0 ), 506, Vector2( 9, 1 ), 254, Vector2( 9, 2 ), 511, Vector2( 9, 3 ), 63, Vector2( 10, 0 ), 504, Vector2( 10, 2 ), 443, Vector2( 10, 3 ), 191, Vector2( 11, 0 ), 216, Vector2( 11, 1 ), 251, Vector2( 11, 2 ), 219, Vector2( 11, 3 ), 3 ]
0/autotile/icon_coordinate = Vector2( 0, 0 )
0/autotile/tile_size = Vector2( 16, 16 )
0/autotile/spacing = 0
0/autotile/occluder_map = [  ]
0/autotile/navpoly_map = [  ]
0/autotile/priority_map = [  ]
0/autotile/z_index_map = [  ]
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0
1/name = "loveable-extended.png 1"
1/texture = ExtResource( 14 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 0, 0, 16, 16 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape_one_way = false
1/shape_one_way_margin = 0.0
1/shapes = [  ]
1/z_index = 0
2/name = "loveable-extended.png 2"
2/texture = ExtResource( 14 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 16, 0, 16, 16 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape_one_way = false
2/shape_one_way_margin = 0.0
2/shapes = [  ]
2/z_index = 0
3/name = "loveable-extended.png 3"
3/texture = ExtResource( 14 )
3/tex_offset = Vector2( 0, 0 )
3/modulate = Color( 1, 1, 1, 1 )
3/region = Rect2( 160, 32, 16, 16 )
3/tile_mode = 0
3/occluder_offset = Vector2( 0, 0 )
3/navigation_offset = Vector2( 0, 0 )
3/shape_offset = Vector2( 0, 0 )
3/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
3/shape_one_way = false
3/shape_one_way_margin = 0.0
3/shapes = [  ]
3/z_index = 0
4/name = "loveable-extended.png 4"
4/texture = ExtResource( 14 )
4/tex_offset = Vector2( 0, 0 )
4/modulate = Color( 1, 1, 1, 1 )
4/region = Rect2( 0, 80, 192, 64 )
4/tile_mode = 1
4/autotile/bitmask_mode = 1
4/autotile/bitmask_flags = [ Vector2( 0, 0 ), 144, Vector2( 0, 1 ), 146, Vector2( 0, 2 ), 18, Vector2( 0, 3 ), 16, Vector2( 1, 0 ), 176, Vector2( 1, 1 ), 178, Vector2( 1, 2 ), 50, Vector2( 1, 3 ), 48, Vector2( 2, 0 ), 184, Vector2( 2, 1 ), 186, Vector2( 2, 2 ), 58, Vector2( 2, 3 ), 56, Vector2( 3, 0 ), 152, Vector2( 3, 1 ), 154, Vector2( 3, 2 ), 26, Vector2( 3, 3 ), 24, Vector2( 4, 0 ), 187, Vector2( 4, 1 ), 434, Vector2( 4, 2 ), 182, Vector2( 4, 3 ), 250, Vector2( 5, 0 ), 440, Vector2( 5, 1 ), 510, Vector2( 5, 2 ), 447, Vector2( 5, 3 ), 62, Vector2( 6, 0 ), 248, Vector2( 6, 1 ), 507, Vector2( 6, 2 ), 255, Vector2( 6, 3 ), 59, Vector2( 7, 0 ), 190, Vector2( 7, 1 ), 218, Vector2( 7, 2 ), 155, Vector2( 7, 3 ), 442, Vector2( 8, 0 ), 432, Vector2( 8, 1 ), 438, Vector2( 8, 2 ), 446, Vector2( 8, 3 ), 54, Vector2( 9, 0 ), 506, Vector2( 9, 1 ), 254, Vector2( 9, 2 ), 511, Vector2( 9, 3 ), 63, Vector2( 10, 0 ), 504, Vector2( 10, 2 ), 443, Vector2( 10, 3 ), 191, Vector2( 11, 0 ), 216, Vector2( 11, 1 ), 251, Vector2( 11, 2 ), 219, Vector2( 11, 3 ), 27 ]
4/autotile/icon_coordinate = Vector2( 0, 0 )
4/autotile/tile_size = Vector2( 16, 16 )
4/autotile/spacing = 0
4/autotile/occluder_map = [  ]
4/autotile/navpoly_map = [  ]
4/autotile/priority_map = [  ]
4/autotile/z_index_map = [  ]
4/occluder_offset = Vector2( 0, 0 )
4/navigation_offset = Vector2( 0, 0 )
4/shape_offset = Vector2( 0, 0 )
4/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
4/shape_one_way = false
4/shape_one_way_margin = 0.0
4/shapes = [  ]
4/z_index = 0
5/name = "loveable-extended.png 5"
5/texture = ExtResource( 14 )
5/tex_offset = Vector2( 0, 0 )
5/modulate = Color( 1, 1, 1, 1 )
5/region = Rect2( 32, 0, 160, 16 )
5/tile_mode = 2
5/autotile/icon_coordinate = Vector2( 0, 0 )
5/autotile/tile_size = Vector2( 16, 16 )
5/autotile/spacing = 0
5/autotile/occluder_map = [  ]
5/autotile/navpoly_map = [  ]
5/autotile/priority_map = [  ]
5/autotile/z_index_map = [  ]
5/occluder_offset = Vector2( 0, 0 )
5/navigation_offset = Vector2( 0, 0 )
5/shape_offset = Vector2( 0, 0 )
5/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
5/shape_one_way = false
5/shape_one_way_margin = 0.0
5/shapes = [  ]
5/z_index = 0
6/name = "ice_tile.png 6"
6/texture = ExtResource( 12 )
6/tex_offset = Vector2( 0, 0 )
6/modulate = Color( 1, 1, 1, 1 )
6/region = Rect2( 0, 0, 16, 16 )
6/tile_mode = 0
6/occluder_offset = Vector2( 0, 0 )
6/navigation_offset = Vector2( 0, 0 )
6/shape_offset = Vector2( 0, 0 )
6/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
6/shape_one_way = false
6/shape_one_way_margin = 0.0
6/shapes = [  ]
6/z_index = 0
script = SubResource( 1 )

[sub_resource type="StreamTexture" id=3]
load_path = "res://.import/loveable_rogue.png-a26341772e79e32042028726586e34e4.stex"

[sub_resource type="GDScript" id=4]
script/source = "extends GameActor


signal message_0(msg)
signal try_action_at(actor, action, action_position)

export(ACT.Actions) var default_move = ACT.Actions.BasicMove
export(ACT.Actions) var default_open = ACT.Actions.BasicOpen
export(ACT.Actions) var default_close = ACT.Actions.BasicClose
export(ACT.Actions) var default_push = ACT.Actions.Push
export(ACT.Actions) var default_use = ACT.Actions.BasicUse

var local_default_actions = {}

var opens_doors = true
var pending_action = ACT.Type.None
# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
func _input(event):
	if !event.is_pressed() or self.acting_state == ACT.ActingState.Wait:
		return
	if event is InputEventMouseButton:
			if event.button_index == BUTTON_LEFT and event.pressed:
				var m_cell = WRLD.get_mouse_game_position()
				if not act_at_location(m_cell):
					var at_cell = FOV.cast_nearest_point(get_game_position(), m_cell, 1)
					act_at_location(at_cell)
	if event.is_action(\"move_left\"):
		act_in_direction(Vector2.LEFT)
	elif event.is_action(\"move_right\"):
		act_in_direction(Vector2.RIGHT)
	elif event.is_action(\"move_up\"):
		act_in_direction(Vector2.UP)
	elif event.is_action(\"move_down\"):
		act_in_direction(Vector2.DOWN)
	elif event.is_action(\"open\"):
		pending_action = local_default_actions[ACT.Type.Open]
		pending_action.mark_pending()
	elif event.is_action(\"close\"):
		pending_action = local_default_actions[ACT.Type.Close]
		pending_action.mark_pending()
	elif event.is_action(\"push\"):
		pending_action = local_default_actions[ACT.Type.Push]
		pending_action.mark_pending()
	elif event.is_action(\"move\"):
		pending_action = local_default_actions[ACT.Type.Move]
		pending_action.mark_pending()
	elif event.is_action(\"forcewave\"):
		pending_action = local_actions[ACT.Type.Push][0]
		pending_action.mark_pending()
	elif event.is_action(\"rock\"):
		pending_action = local_actions[ACT.Type.Push][1]
		pending_action.mark_pending()
		
func act_at_location(at_cell: Vector2):
	if self.acting_state != ACT.ActingState.Act:
		return
	if not pending_action:
		var distance_to = at_cell.distance_to(get_game_position())
		for hint in WRLD.get_action_hints(at_cell):
			if local_default_actions.has(hint):
				var candidate_action = local_default_actions[hint]
				if distance_to <= candidate_action.action_range:
					if candidate_action.test_action_at(at_cell):
						acting_state = ACT.ActingState.Wait
						candidate_action.do_action_at(at_cell)
						return true
#					for action in local_default_actions.values():
#						if action.range <= distance_to:
	else:
		var next_action = pending_action
		pending_action = ACT.Type.None
		EVNT.emit_signal(\"hint_area_none\")
		next_action.do_action_at(at_cell)
		return true
	return false
	
func act_in_direction(dir: Vector2):
	if self.acting_state != ACT.ActingState.Act:
		return
	if not pending_action:
		var action_hint = WRLD.get_action_hint(self.get_game_position() + dir)
		print(\"Got default action: \" + ACT.TypeKey(action_hint))
		if local_default_actions.has(action_hint):
			acting_state = ACT.ActingState.Wait
			local_default_actions[action_hint].do_action_at(self.get_game_position() + dir)
		else:
			return
	else:
		var next_action = pending_action
		pending_action = ACT.Type.None
		next_action.do_action_at(self.get_game_position() + dir)
# Called when the node enters the scene tree for the first time.
func _ready():
	is_player = true
	local_default_actions[ACT.Type.Move] = ACT.ActionMapping[default_move].new(self)
	local_default_actions[ACT.Type.Open] = ACT.ActionMapping[default_open].new(self)
	local_default_actions[ACT.Type.Close] = ACT.ActionMapping[default_close].new(self)
	local_default_actions[ACT.Type.Push] = ACT.ActionMapping[default_push].new(self)
	local_default_actions[ACT.Type.Use] = ACT.ActionMapping[default_use].new(self)
	


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[node name="Game" type="Node2D"]
script = ExtResource( 3 )
random_seed = -4554876820186044928
use_seed = true

[node name="DebugGui" type="CanvasLayer" parent="."]
script = ExtResource( 6 )

[node name="Hider" type="Node2D" parent="DebugGui"]
visible = false
script = ExtResource( 9 )

[node name="LeafHighlight" type="ColorRect" parent="DebugGui/Hider"]
margin_right = 40.0
margin_bottom = 40.0
color = Color( 0.423529, 0.988235, 0.109804, 0.364706 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RectHighlight" type="ColorRect" parent="DebugGui/Hider"]
margin_left = -395.107
margin_top = 437.76
margin_right = -355.107
margin_bottom = 477.76
color = Color( 0.968627, 0.0431373, 0.0431373, 0.443137 )
script = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RectrRoomHighlighter" type="ColorRect" parent="DebugGui/Hider"]
margin_right = 40.0
margin_bottom = 40.0
color = Color( 0.0823529, 0.00392157, 1, 0.596078 )
script = ExtResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NodeLayer" type="CanvasLayer" parent="DebugGui/Hider"]

[node name="NodeTree" type="Tree" parent="DebugGui/Hider/NodeLayer"]
visible = false
modulate = Color( 1, 1, 1, 0.666667 )
margin_top = 24.6942
margin_right = 292.0
margin_bottom = 613.694
script = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HideTree" type="Button" parent="DebugGui/Hider/NodeLayer"]
margin_right = 12.0
margin_bottom = 20.0
text = "Toggle Tree"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NextLeaf" type="Button" parent="DebugGui/Hider"]
margin_left = 1241.69
margin_top = 675.59
margin_right = 1261.69
margin_bottom = 695.59
text = "+"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HighlightLeaf" type="Button" parent="DebugGui/Hider"]
margin_left = 1132.13
margin_top = 675.47
margin_right = 1231.13
margin_bottom = 695.47
text = "Highlight Leaf"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PreviousLeaf" type="Button" parent="DebugGui/Hider"]
margin_left = 1103.0
margin_top = 675.0
margin_right = 1120.0
margin_bottom = 695.0
text = "-"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterMark" type="Sprite" parent="DebugGui/Hider"]
scale = Vector2( 4, 4 )
texture = ExtResource( 4 )
region_enabled = true
region_rect = Rect2( 128, 208, 16, 16 )

[node name="Seed" type="Label" parent="DebugGui/Hider"]
margin_left = 93.3395
margin_top = 4.20448
margin_right = 133.34
margin_bottom = 18.2045
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GameWorld" type="Node2D" parent="."]
script = ExtResource( 10 )

[node name="LoveableBasic" type="TileMap" parent="GameWorld"]
tile_set = SubResource( 2 )
cell_size = Vector2( 16, 16 )
format = 1
script = ExtResource( 13 )
tile_type_map = [ 1, 0, 2, 4, 3, 4, 5 ]

[node name="LevelObjects" type="Node2D" parent="GameWorld"]

[node name="LevelActors" type="Node2D" parent="GameWorld"]

[node name="Player" type="Sprite" parent="GameWorld/LevelActors"]
position = Vector2( 1152, 608 )
texture = SubResource( 3 )
centered = false
region_enabled = true
region_rect = Rect2( 96, 144, 16, 16 )
script = SubResource( 4 )
default_action = 256
cim = 48
sam = 352

[node name="Camera2D" type="Camera2D" parent="GameWorld/LevelActors/Player"]
current = true
drag_margin_h_enabled = true
drag_margin_v_enabled = true
drag_margin_left = 0.0
drag_margin_top = 0.0
drag_margin_right = 0.0
drag_margin_bottom = 0.0
editor_draw_limits = true

[node name="Kestrel" parent="GameWorld/LevelActors" instance=ExtResource( 1 )]

[node name="Kestrel2" parent="GameWorld/LevelActors" instance=ExtResource( 1 )]
position = Vector2( 1104, 560 )

[node name="FOWGhosts" type="Node2D" parent="GameWorld"]

[node name="FogOfWar" type="TileMap" parent="GameWorld"]
modulate = Color( 1, 1, 1, 0.678431 )
tile_set = ExtResource( 2 )
cell_size = Vector2( 16, 16 )
format = 1

[node name="Unexplored" type="TileMap" parent="GameWorld"]
tile_set = ExtResource( 2 )
cell_size = Vector2( 16, 16 )
format = 1

[node name="ColorRect" type="ColorRect" parent="GameWorld"]
margin_left = -1120.0
margin_top = -544.0
margin_right = 1312.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="GameWorld"]
margin_left = -864.0
margin_bottom = 720.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TileHighlight" type="ColorRect" parent="GameWorld"]
margin_left = -32.0
margin_top = -16.0
margin_right = -16.0
color = Color( 0.427451, 1, 0.290196, 0.490196 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TileHighlight2" type="ColorRect" parent="GameWorld"]
margin_left = -32.0
margin_top = -16.0
margin_right = -16.0
color = Color( 0.290196, 0.615686, 1, 0.490196 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="FXManager" type="Node2D" parent="."]
script = ExtResource( 19 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
visible = false
margin_right = 256.0
margin_bottom = 512.0
color = Color( 0.121569, 0.0941176, 0.0941176, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="CanvasLayer"]
margin_left = 528.0
margin_top = 512.0
margin_right = 1280.0
margin_bottom = 720.0
color = Color( 0.0823529, 0.0823529, 0.0980392, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer"]
margin_left = 544.0
margin_top = 528.0
margin_right = 1270.0
margin_bottom = 704.0
alignment = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="CanvasLayer/VBoxContainer"]
margin_right = 726.0
margin_bottom = 158.0
grow_horizontal = 0
grow_vertical = 0
size_flags_vertical = 3
scroll_horizontal_enabled = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LogBox" type="RichTextLabel" parent="CanvasLayer/VBoxContainer/ScrollContainer"]
visible = false
margin_right = 726.0
margin_bottom = 158.0
grow_vertical = 0
size_flags_horizontal = 3
size_flags_vertical = 3
fit_content_height = true
scroll_active = false
scroll_following = true

[node name="MessageBox" type="Label" parent="CanvasLayer/VBoxContainer"]
margin_top = 162.0
margin_right = 726.0
margin_bottom = 176.0

[node name="GameUI" type="Node2D" parent="."]
script = ExtResource( 20 )

[node name="Line2D" type="Line2D" parent="GameUI"]
width = 4.0

[node name="AreaHighlight" type="Node2D" parent="GameUI"]

[node name="Tweens" type="Node" parent="."]

[node name="Tween" type="Tween" parent="Tweens"]

[node name="SFX" type="Node2D" parent="."]

[node name="Footsteps" type="AudioStreamPlayer2D" parent="SFX"]
pause_mode = 1
stream = ExtResource( 15 )
volume_db = -5.871

[node name="Switch" type="AudioStreamPlayer" parent="SFX"]
stream = ExtResource( 17 )

[node name="BarsOpen" type="AudioStreamPlayer" parent="SFX"]
stream = ExtResource( 16 )

[node name="Door" type="AudioStreamPlayer" parent="SFX"]
stream = ExtResource( 18 )

[connection signal="world_ready" from="GameWorld" to="." method="_on_world_ready"]
[connection signal="try_action_at" from="GameWorld/LevelActors/Player" to="GameWorld" method="_on_actor_try_action_at"]
